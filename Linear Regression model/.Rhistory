dataset= read.csv(file.choose())
dataset
View(dataset)
# Taking care of missing data
dataset$Age
dataset$Salary
dataset$Age = ifelse(is.na(dataset$Age),
ave(dataset$Age,
FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Age)
dataset$Age
dataset$Salary = ifelse(is.na(dataset$Salary),
ave(dataset$Salary,
FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Salary)
dataset$Salary
View(dataset)
str(dataset)
# Encoding categorical data
dataset$Country
dataset$Country = factor(dataset$Country,
levels = c('France', 'Spain', 'Germany'),
labels = c(1, 2, 3))
str(dataset)
dataset$Purchased = factor(dataset$Purchased,
levels = c('No', 'Yes'),
labels = c(0, 1))
dataset$Purchased
install.packages('caTools')
library(caTools)
set.seed(123)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
install.packages("caTools")
install.packages("caTools")
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
dataset= read.csv(file.choose())
dataset
View(dataset)
# Taking care of missing data
dataset$Maths
dataset$English
dataset$Maths = ifelse(is.na(dataset$Maths),
ave(dataset$Maths,
FUN = function(x) mean(x, na.rm = TRUE)),
dataset$Maths)
dataset$Maths
dataset$English = ifelse(is.na(dataset$English),
ave(dataset$English,
FUN = function(x) mean(x, na.rm = TRUE)),
dataset$English)
dataset$English
View(dataset)
View(dataset)
# Encoding categorical data
dataset$Gender
dataset$Gender = factor(dataset$Gender,
levels = c('Male', 'Female'),
labels = c(1, 2, 3))
dataset$Gender = factor(dataset$Gender,
levels = c('Male', 'Female'),
labels = c(1, 2))
dataset$Gender
str(dataset)
library(caTools)
set.seed(123)
split = sample.split(dataset$Purchased, SplitRatio = 0.8)
split
training_set = subset(dataset, split == TRUE)
test_set = subset(dataset, split == FALSE)
View(training_set)
training_set = scale(training_set)
test_set = scale(test_set)
##Scaling
##scaling will use the formula or/and standard deviation to scale the values
training_set[,2:3]
training_set[,2:3] = scale(training_set[,2:3])
test_set[,2:3] = scale(test_set[,2:3])
View(test_set)
